@a2_eclipse

PRO gw_eclipse_new, datapath, latitude
;;Have it take in the path of the file and the lat_station variable
;======================================================================================
;VERSION update from gw_eclipse.pro
;Now this wrapper
;(1) contains a function to calculate the cold-point tropopause height, and leave +/- 1.5km above
;and below the tropopause as the buffer zone that is not suitable for GW analysis
;(2) a fixed height segment range with respect to tropopause for computing GWs in stratosphere and
;troposphere separately (stratosphere:1.5 km above tropopause and min(max(balloon reached height),30 km;
;troposphere:1.98 km above surface to 1.5 km below tropopause. The lowest 1.98 km is excluded due to consideration of PBL).
;(3) a fixed vertical resolution (15 m) and a fixed polynomial fitting order (3rd) to remove backgrounds.The
;actual segment thickness has to be completely divisible by 15 m hence, which will result in a slight
;height segment difference from the ones claimed above depending on the determined tropopause height (<15 m difference).
;
;Disclaimer:
;(1)The above changes are based on discussion with SUNY Oswego team for the purpose of creating
;a user-friendly website to generate GW parameters from the hodograph method (traditional). It is NOWHERE
;intended for more advanced users who might want to try different methods/height segment/background removal,etc.
;(2)There is no uncertainty quantification associated with this current hodograph method application. In
;other words, it is assumed the sounding has zero measurement error, and the method is "perfect" at removing background
;and there's a dominant GW packet in the sounding profile. In practice, these assumptions apparently have
;flaws, and we ignore these flaws for the purpose of making it user-friendly to users with rudimentary needs.
;It is NOT suitable for advanced needs.
;(3)Using cold-point to determine tropopause is not ideal. However, this code is not designed for
;detecting tropopause by any means. It's for the purpose to exclude sharp gradient from tropopause layer structure that
;can bias GW results. Therefore, we choose the easiest definition to implement in coding rather than the
;most strict ones. Again, please use with caution with the "cold-point tropoapuse height" output.
;(4)Please cite one of the following references if you use results generated by this codes/platform for
;Jie Gong (2009):Characteristics of Two Gravity Wave Sources in the US High Vertical-resolution Radiosonde Data,PhD. thesis,
;http://hdl.handle.net/1951/52345, Stony Brook University PhD Thesis Database
;Wang and Geller (2003): Morphology of gravity-wave energy as observed from 4 years (1998–2001) of high vertical resolution U.S. radiosonde data, J. G. R., https://doi.org/10.1029/2002JD002786.
;Allen, S., and R. A. Vincent, Gravity wave activity in the lower atmosphere: Seasonal and latitudinal variations, J. Geophys. Res., 100, 1327–1350, 1995.
;Eckermann, S. D., Hodographic analysis of gravity waves: Relationships among Stokes parameters, rotary spectra, and cross-spectral methods, J. Geophys. Res., 101, 19,169–19,174, 1996.
;
;This note is updated by J. Gong on 02/21/2024
;======================================================================================
infile=findfile(datapath+'*.txt')
nf=n_elements(infile)

outputfile='~\AppData\Local\Temp\gw_parameters.txt'

zseg=[1.98,30.]*1.E+3 ;original input height segment. Will be separated to stratosphere and troposphere later
dz=15.
ipoly=3 ;fixed 3rd polynomial fitting

lat_station=latitude ;//you need to figure out a way to either read latitude from radiosonde file or ask user to input.

openw,28,outputfile

for kf=0,nf-1 do begin
 profilename=strmid(infile[kf],strlen(datapath),13)
 ;print,infile[kf]
 gw_eclipse_complete,infile[kf],zseg[0],zseg[1],3,dz,lat_station,$
	gw=gw,npoly=ipoly ;//don't take gw parameters from here. This step is to get mean T profile for determining tropopause
 if gw.outputflag NE 0 then goto,next_profile
 Tmean=gw.input.tm
 zz=gw.input.z
 iz=where(Tmean EQ min(Tmean))
 z_tropo=zz(iz)
 np=(z_tropo-1.5-1.98)*1.E+3/dz
 if np LT 0 then begin
	 print,'tropopause height wrong, stop processing'
	 goto,next_profile
 endif
 if round(np) EQ np then zsegTropo=[1.98,z_tropo-1.5]*1.E+3 else $
	 zsegTropo=[1.98,1.98+dz/1.E+3*floor(np)]*1.E+3

 np=(30.-z_tropo-1.5)*1.E+3/dz
 if np LT 0 then begin
	 print,'tropopause height wrong, stop processing'
	 goto,next_profile
 endif
 if round(np) EQ np then zsegStrato=[z_tropo+1.5,30.]*1.E+3 else $
	zsegStrato=[30.-dz/1.E+3*floor(np),30.]*1.E+3
  ;print,infile[kf]
  gw_eclipse_complete,infile[kf],zsegTropo[0],zsegTropo[1],3,dz,lat_station,$
	gw=gw_tropo,npoly=ipoly
  gw_eclipse_complete,infile[kf],zsegStrato[0],zsegStrato[1],3,dz,lat_station,$
	gw=gw_strato,npoly=ipoly

  gw=gw_tropo
  printf,28,'Tropo'
  printf,28,gw.lh ;Horizontal Wavelength
  printf,28,gw.lz ;Vertical Wavelength
  printf,28,gw.mean_dir ;Mean Phase Direction
  printf,28,gw.up_frac*100. ;Upward Propigation Fraction
  printf,28,gw.uw ;Zonal Momentum mean
  printf,28,gw.vw ;Meridional Momentum mean
  printf,28,gw.pe ;Potential Energy
  printf,28,gw.ke ;Kinetic Energy
  printf,28,gw.omega ;Coriolis Parameter

  printf,28,string(10b)
  gw=gw_strato
  printf,28,'Strato'
  printf,28,gw.lh
  printf,28,gw.lz
  printf,28,gw.mean_dir
  printf,28,gw.up_frac*100.
  printf,28,gw.uw
  printf,28,gw.vw
  printf,28,gw.pe
  printf,28,gw.ke
  printf,28,gw.omega
  goto,next_profile

next_profile:
endfor ;kf
  close,28
print, "success"
end
end